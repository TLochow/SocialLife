[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scripts/SceneChanger.gd" type="Script" id=1]
[ext_resource path="res://Sprites/Black.png" type="Texture" id=2]

[sub_resource type="Animation" id=1]
resource_name = "FadeIn"
length = 0.25
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath("Black:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "FadeOut"
length = 0.25
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath("Black:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

vec4 sample_glow_pixel(sampler2D tex, vec2 uv) {
    float hdr_threshold = 0.4; // Exagerated, almost everything will glow
    return max(textureLod(tex, uv, 2.0) - hdr_threshold, vec4(0.0));
}

void fragment() {
    vec2 ps = SCREEN_PIXEL_SIZE;
    // Get blurred color from pixels considered glowing
    vec4 col0 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(-ps.x, 0));
    vec4 col1 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(ps.x, 0));
    vec4 col2 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(0, -ps.y));
    vec4 col3 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(0, ps.y));

    vec4 col = texture(SCREEN_TEXTURE, SCREEN_UV);
    vec4 glowing_col = 0.25 * (col0 + col1 + col2 + col3);

    COLOR = vec4(col.rgb + glowing_col.rgb, col.a);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[node name="SceneChanger" type="CanvasLayer"]
pause_mode = 2
layer = 128
script = ExtResource( 1 )

[node name="Black" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/FadeIn = SubResource( 1 )
anims/FadeOut = SubResource( 2 )

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 6.10352e-05
margin_bottom = 6.10352e-05
mouse_filter = 2
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}
